{"ast":null,"code":"import _defineProperty from \"C:\\\\javascript\\\\ecommerce\\\\ecom\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\javascript\\\\ecommerce\\\\ecom\\\\src\\\\componentsss\\\\Context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { storeProducts, detailProduct } from '../data';\nconst ProductContext = React.createContext(); // consumer and prodiver\n\nclass ProductProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalProduct: detailProduct,\n      modalOpen: false,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      product.total = product.price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModel = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModel = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.cart];\n      selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      this.setState(() => {\n        return {\n          cart: tempCart\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      console.log(\"this is decrement\");\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(items => items.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: tempCart,\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = id => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProduct();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = id => {\n      let subTotal = 0;\n      this.state.cart.map(items => subTotal += items.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProduct();\n  }\n\n  setProduct() {\n    let tempProducts = [];\n    storeProducts.map(items => {\n      const singleItem = _objectSpread({}, items);\n\n      return tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModel: this.openModel,\n        closeModel: this.closeModel,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };\n/* \r\nsingle state component ->  state={\r\n        products:storeProducts,\r\n        detailProduct:detailProduct\r\n    }\r\nthis is by using reference\r\n\r\n*/","map":{"version":3,"sources":["C:\\javascript\\ecommerce\\ecom\\src\\componentsss\\Context.js"],"names":["React","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","Component","state","products","cart","modalProduct","modalOpen","cartSubTotal","cartTax","cartTotal","getItem","id","product","find","item","handleDetail","setState","addToCart","tempProducts","index","indexOf","inCart","count","total","price","addTotals","openModel","closeModel","increment","tempCart","selectedProduct","decrement","console","log","removeItem","filter","items","removedProduct","clearCart","setProduct","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","singleItem","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {storeProducts , detailProduct } from '../data'\r\n\r\nconst ProductContext = React.createContext()\r\n// consumer and prodiver\r\n\r\nclass ProductProvider extends React.Component{\r\n\r\n    state={\r\n        products:[],\r\n        detailProduct:detailProduct,\r\n        cart:[],\r\n        modalProduct:detailProduct,\r\n        modalOpen:false,\r\n        cartSubTotal:0,\r\n        cartTax:0,\r\n        cartTotal:0\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        this.setProduct();\r\n    }\r\n\r\n    setProduct(){\r\n\r\n        let tempProducts=[];\r\n\r\n        storeProducts.map(items =>{\r\n               const singleItem={...items};\r\n           return tempProducts=[...tempProducts,singleItem]\r\n        })\r\n\r\n        this.setState(()=>{\r\n            return {products:tempProducts}\r\n        })\r\n\r\n    }\r\n\r\n    getItem = (id) =>{\r\n        const product =this.state.products.find(item=> item.id === id)\r\n        return product\r\n    }\r\n\r\n\r\n    handleDetail = (id) =>{\r\n\r\n      const  product = this.getItem(id)\r\n        this.setState(()=>{\r\n            return {detailProduct:product}\r\n        })\r\n    }\r\n \r\n    addToCart = (id) =>{\r\n\r\n        let tempProducts= [...this.state.products]\r\n      const index=tempProducts.indexOf(this.getItem(id))\r\n      const product=tempProducts[index]\r\n            product.inCart=true\r\n            product.count=1\r\n            product.total=product.price\r\n        \r\n        this.setState( ()=>\r\n        {\r\n            return {products:tempProducts , cart: [...this.state.cart , product] }\r\n        } , () =>{ this.addTotals()})\r\n\r\n    }\r\n    \r\n    openModel = (id) => {\r\n\r\n        const  product = this.getItem(id) \r\n        this.setState( () =>{\r\n\r\n           return { modalProduct:product , modalOpen:true}\r\n            \r\n        })\r\n    }\r\n\r\n    closeModel=()=>{\r\n\r\n        this.setState ( ()=>{\r\n            return {modalOpen:false}\r\n        })\r\n\r\n    }\r\n\r\n    increment = (id) =>{\r\n        \r\n        let tempCart=[...this.cart]\r\n       selectedProduct= tempCart.find(item=> item.id === id)\r\n      const index=tempCart.indexOf(selectedProduct)\r\n      const product=tempCart[index]\r\n\r\n      this.setState( () =>{\r\n          return {cart:tempCart}\r\n      }, () => {this.addTotals()})\r\n        \r\n    }\r\n\r\n    decrement = (id) =>{\r\n        console.log(\"this is decrement\")\r\n    }\r\n\r\n    removeItem = (id) =>{\r\n     let tempProducts=[...this.state.products]\r\n     let tempCart=[...this.state.cart]\r\n\r\n     tempCart=tempCart.filter((items) => items.id !== id)\r\n     const index=tempProducts.indexOf(this.getItem(id))\r\n     let removedProduct= tempProducts[index]\r\n     removedProduct.inCart=false\r\n     removedProduct.count=0\r\n     removedProduct.total=0\r\n\r\n     this.setState( ()=>{\r\n         return {\r\n             cart:tempCart,\r\n             products:[...tempProducts]\r\n         }\r\n     } , () =>{this.addTotals()})\r\n\r\n    }\r\n\r\n    clearCart = (id) =>{\r\n       \r\n        this.setState(() => {\r\n            return {cart:[]}\r\n        }, () => {this.setProduct() ;this.addTotals()})\r\n    }\r\n\r\n    addTotals =(id) =>{\r\n        let subTotal=0\r\n\r\n        this.state.cart.map( items => subTotal+=items.total)\r\n        const tempTax=subTotal * 0.1\r\n        const tax=parseFloat(tempTax.toFixed(2)) \r\n        const total=subTotal + tax\r\n\r\n        this.setState( () =>{\r\n\r\n            return {cartSubTotal:subTotal,\r\n                cartTax:tax,\r\n                cartTotal:total}\r\n            \r\n        })\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            \r\n            <ProductContext.Provider value={\r\n                {\r\n                    ...this.state,\r\n                    handleDetail:this.handleDetail , \r\n                    addToCart:this.addToCart,\r\n                    openModel:this.openModel,\r\n                    closeModel:this.closeModel,\r\n                    increment:this.increment,\r\n                    decrement:this.decrement,\r\n                    removeItem:this.removeItem,\r\n                    clearCart:this.clearCart,\r\n\r\n                }}>\r\n\r\n                {this.props.children}\r\n            </ProductContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer\r\n\r\nexport { ProductProvider , ProductConsumer }\r\n\r\n/* \r\nsingle state component ->  state={\r\n        products:storeProducts,\r\n        detailProduct:detailProduct\r\n    }\r\nthis is by using reference\r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}